# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI - Tests with Visual Report v1

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest    
    steps:
    # 1. Clonar repo
    - uses: actions/checkout@v4   
    # 2. Configurar JDK
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'corretto'
        cache: maven     

    # 3. Ejecutar todos los tests con Maven
    - name: Run Maven tests
      run: mvn -B clean test --file pom.xml

    # 4. Generar reportes HTML y site
    - name: Generate HTML report
      if: always()
      run: mvn surefire-report:report
      
    # 5. Subir los reportes de tests como artefactos
    - name: Upload test reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          target/surefire-reports/*.xml
          target/surefire-reports-html/

    # 6. Mostrar un resumen r√°pido de todos los tests en logs
    - name: Show test summary
      if: always()
      run: |
        echo "---- Test Summary ----"
        find target/surefire-reports/ -name "*.txt" -exec grep -E "Tests run|Failures|Errors" {} \;
